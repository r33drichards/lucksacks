name: Build and Push Docker Image

permissions:
  contents: write
on:
  push:
    branches:
      - main

jobs:
  go-checks:
    name: Go Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        check: [fmt, vet, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: .go-version

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go modules
        run: go mod download

      - name: Run go check
        run: |
          if [ "${{ matrix.check }}" = "fmt" ]; then
            output=$(gofmt -l .)
            if [ -n "$output" ]; then
              echo "Go files must be formatted. Run 'gofmt -w .'"
              echo "$output"
              exit 1
            fi
          elif [ "${{ matrix.check }}" = "vet" ]; then
            go vet ./...
          elif [ "${{ matrix.check }}" = "test" ]; then
            go test -v ./...
          fi
      - name: Notify Slack Action
        uses: ravsamhq/notify-slack-action@2.3.0
        if: ${{ always() && github.ref_name == 'main' }}
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "{workflow} is failing"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  build-and-push:
    name: Build and Push Docker/Helm
    runs-on: ubuntu-latest
    needs: go-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: 
            wholelottahoopla/lucksacks:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 
      - name: print image tag
        run: |
          echo "Image tag: wholelottahoopla/lucksacks:${{ github.sha }}"

      - name: Update Helm values.yaml with new image tag and push
        if: github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
        run: |
          set -e
          # Update the image tag in values.yaml
          sed -i.bak "s/^  tag: .*/  tag: ${{ github.sha }}/" charts/http/values.yaml
          rm charts/http/values.yaml.bak

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Only commit if there are changes
          if ! git diff --quiet; then
            git add charts/http/values.yaml
            git commit -m "chore: update Helm image tag to ${{ github.sha }}"
            git push
          fi

      - name: Bump Helm chart patch version and push
        if: github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
        run: |
          set -e
          # Bump the patch version in Chart.yaml
          CHART_FILE=charts/http/Chart.yaml
          VERSION_LINE=$(grep '^version:' "$CHART_FILE")
          CURRENT_VERSION=$(echo "$VERSION_LINE" | awk '{print $2}')
          PATCH=$(echo $CURRENT_VERSION | awk -F. '{print $3}')
          MINOR=$(echo $CURRENT_VERSION | awk -F. '{print $2}')
          MAJOR=$(echo $CURRENT_VERSION | awk -F. '{print $1}')
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          sed -i.bak "s/^version: .*/version: $NEW_VERSION/" "$CHART_FILE"
          rm "$CHART_FILE.bak"

          # Only commit if there are changes
          if ! git diff --quiet; then
            git add "$CHART_FILE"
            git commit -m "chore: bump Helm chart patch version to $NEW_VERSION"
            git push
          fi

      - name: Notify Slack Action
        uses: ravsamhq/notify-slack-action@2.3.0
        if: ${{ always() && github.ref_name == 'main' }}
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "{workflow} is failing"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}